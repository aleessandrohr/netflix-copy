{"version":3,"sources":["componentes/Welcome/imagens/netflix-logo-150x79.png","componentes/Welcome/Welcome.js","componentes/API/Dados.js","componentes/App.js","index.js"],"names":["Welcome","className","src","Netflix","alt","href","rel","target","API_KEY","basicFetch","endpoint","a","fetch","req","json","funções","getHomeList","slug","title","items","getMovieInfo","movieId","type","info","App","useState","setMovieList","setFeaturedData","useEffect","Dados","list","originals","filter","i","randomChose","Math","floor","random","results","length","chosen","id","chosenInfo","loadAll","exact","path","ReactDOM","render","document","getElementById"],"mappings":"6NAAe,MAA0B,gDCgC1BA,G,MA5BC,WAEZ,OACI,sBAAKC,UAAU,YAAf,UACI,wBAAQA,UAAU,SAAlB,SACI,sBAAKA,UAAU,MAAf,UACI,qBAAKC,IAAKC,EAASC,IAAI,UAAUH,UAAU,SAC3C,qBAAKA,UAAU,YAAf,SACI,6BACI,6BACI,mBAAGI,KAAK,SAASC,IAAI,OAArB,+BAMpB,yBAASL,UAAU,UAAnB,SACI,kEAAiC,uBAAjC,qBAEJ,yBAAQA,UAAU,SAAlB,UACI,gOACA,+DAA8B,+BAAM,mBAAGI,KAAK,0DAA0DC,IAAI,aAAaC,OAAO,SAA1F,sBAApC,IAAyJ,mBAAGN,UAAU,qBACtK,oFC1BVO,EAAU,mCAGVC,EAAU,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,sEACGC,MAAM,GAAD,OAHV,gCAGU,OAAeF,IADvB,cACTG,EADS,gBAEIA,EAAIC,OAFR,cAETA,EAFS,yBAGRA,GAHQ,2CAAH,sDAgEDC,EALC,CACZC,YAtDa,uCAAG,sBAAAL,EAAA,sEAKKF,EAAW,wDAAD,OAAyDD,IALxE,gCAGRS,KAAM,YACNC,MAAO,uBACPC,MALQ,eAUKV,EAAW,6CAAD,OAA8CD,IAV7D,gCAQRS,KAAM,WACNC,MAAO,4BACPC,MAVQ,gBAeKV,EAAW,2CAAD,OAA4CD,IAf3D,iCAaRS,KAAM,YACNC,MAAO,UACPC,MAfQ,gBAoBKV,EAAW,yDAAD,OAA0DD,IApBzE,iCAkBRS,KAAM,SACNC,MAAO,aACPC,MApBQ,gBAyBKV,EAAW,yDAAD,OAA0DD,IAzBzE,iCAuBRS,KAAM,SACNC,MAAO,aACPC,MAzBQ,gBA8BKV,EAAW,yDAAD,OAA0DD,IA9BzE,mCA4BRS,KAAM,SACNC,MAAO,SACPC,MA9BQ,iBAmCKV,EAAW,4DAAD,OAA6DD,IAnC5E,mCAiCRS,KAAM,UACNC,MAAO,UACPC,MAnCQ,iBAwCKV,EAAW,yDAAD,OAA0DD,IAxCzE,mCAsCRS,KAAM,cACNC,MAAO,kBACPC,MAxCQ,mHAAH,qDAuDbC,aAVc,uCAAG,WAAOC,EAASC,GAAhB,eAAAX,EAAA,0DAEbU,EAFa,gCAGAZ,EAAW,IAAD,OAAKa,EAAL,YAAaD,EAAb,mCAA+Cb,IAHzD,OAGbe,EAHa,uCAKVA,GALU,2CAAH,yDChBHC,G,MAhCH,WAAO,IAAD,EAEoBC,mBAAS,IAF7B,mBAEIC,GAFJ,aAG0BD,mBAAS,IAHnC,mBAGOE,GAHP,WAmBd,OAdAC,qBAAU,YACO,uCAAG,oCAAAjB,EAAA,sEACKkB,EAAMb,cADX,cACRc,EADQ,OAEZJ,EAAaI,GACTC,EAAYD,EAAKE,QAAO,SAAAC,GAAC,MAAe,cAAXA,EAAEhB,QAC/BiB,EAAcC,KAAKC,MAAMD,KAAKE,UAAYN,EAAU,GAAGZ,MAAMmB,QAAQC,OAAS,IAC9EC,EAAST,EAAU,GAAGZ,MAAMmB,QAAQJ,GAL5B,SAMWL,EAAMT,aAAaoB,EAAOC,GAAI,MANzC,OAMRC,EANQ,OAOZf,EAAgBe,GAPJ,4CAAH,qDAUbC,KACD,IAGC,cAAC,IAAD,UACI,8BACI,cAAC,IAAD,UACI,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAlB,SACI,cAAC,EAAD,cC1BxBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.d0c12e7e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/netflix-logo-150x79.8496f04c.png\";","import React from 'react';\r\nimport Netflix from './imagens/netflix-logo-150x79.png';\r\nimport './Welcome.css';\r\n\r\nconst Welcome = () => {\r\n    \r\n    return(\r\n        <div className=\"container\">\r\n            <header className=\"header\">\r\n                <nav className=\"nav\">\r\n                    <img src={Netflix} alt=\"Netflix\" className=\"logo\"/>\r\n                    <div className=\"nav-items\">\r\n                        <ul>\r\n                            <li>\r\n                                <a href=\"/login\" rel=\"next\">Entrar</a>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </nav>\r\n            </header>\r\n            <section className=\"section\">\r\n                <h1>Filmes, séries e muito mais. <br/> Sem limites.</h1>\r\n            </section>\r\n            <footer className=\"footer\">\r\n                <p>Não possuo a marca Netflix e portanto este site foi criado apenas para treinar minhas habilidades na criação de uma aplicação da web e nunca será usada para fins comerciais.</p>\r\n                <p>Veja o código-fonte no meu <span><a href=\"https://github.com/alessandrohenriqueramos/netflix-copy\" rel=\"noreferrer\" target=\"_blank\">Github</a></span> <i className=\"fab fa-github\"></i></p>\r\n                <p>Desenvolvido por Alessandro Henrique Ramos.</p>\r\n            </footer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Welcome;","const API_KEY = 'baf64e5536147c8cb581f1f3ca166ff1';\r\nconst API_BASE = 'https://api.themoviedb.org/3';\r\n\r\nconst basicFetch = async (endpoint) => {\r\n    const req = await fetch(`${API_BASE}${endpoint}`)\r\n    const json = await req.json();\r\n    return json\r\n}\r\n\r\nconst getHomeList = async () => {\r\n    return [\r\n        {\r\n            slug: 'originals',\r\n            title: 'Originais do Netflix',\r\n            items: await basicFetch(`/discover/tv?with_network=213&language=pt-BR&api_key=${API_KEY}`)\r\n        },\r\n        {\r\n            slug: 'trending',\r\n            title: 'Recomendados para Você',\r\n            items: await basicFetch(`/trending/all/week?language=pt-BR&api_key=${API_KEY}`)\r\n        },\r\n        {\r\n            slug: 'tolerated',\r\n            title: 'Em Alta',\r\n            items: await basicFetch(`/movie/top_rated?language=pt-BR&api_key=${API_KEY}`)\r\n        },\r\n        {\r\n            slug: 'action',\r\n            title: 'Ação',\r\n            items: await basicFetch(`/discover/movie?with_genres=28&language=pt-BR&api_key=${API_KEY}`)\r\n        },\r\n        {\r\n            slug: 'comedy',\r\n            title: 'Comédia',\r\n            items: await basicFetch(`/discover/movie?with_genres=35&language=pt-BR&api_key=${API_KEY}`)\r\n        },\r\n        {\r\n            slug: 'horror',\r\n            title: 'Terror',\r\n            items: await basicFetch(`/discover/movie?with_genres=27&language=pt-BR&api_key=${API_KEY}`)\r\n        },\r\n        {\r\n            slug: 'romance',\r\n            title: 'Romance',\r\n            items: await basicFetch(`/discover/movie?with_genres=10749&language=pt-BR&api_key=${API_KEY}`)\r\n        },\r\n        {\r\n            slug: 'documentary',\r\n            title: 'Documentário',\r\n            items: await basicFetch(`/discover/movie?with_genres=99&language=pt-BR&api_key=${API_KEY}`)\r\n        },\r\n    ]\r\n}\r\n\r\nconst getMovieInfo = async (movieId, type) => {\r\n    let info;\r\n    if (movieId) {\r\n        info = await basicFetch(`/${type}/${movieId}?language=pt-BR&api_key=${API_KEY}`)\r\n    }\r\n    return info;\r\n}\r\n\r\nconst funções = {\r\n    getHomeList,\r\n    getMovieInfo,\r\n}\r\n\r\nexport default funções;","import React, { useState, useEffect } from 'react';\r\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\r\nimport Welcome from './Welcome/Welcome';\r\nimport Dados from './API/Dados';\r\nimport './Normalize.css';\r\n\r\nconst App = () => {\r\n\r\n    const [movieList, setMovieList] = useState([]);\r\n    const [featuredData, setFeaturedData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const loadAll = async () => {\r\n            let list = await Dados.getHomeList();\r\n            setMovieList(list);\r\n            let originals = list.filter(i => i.slug === 'originals');\r\n            let randomChose = Math.floor(Math.random() * (originals[0].items.results.length - 1))\r\n            let chosen = originals[0].items.results[randomChose];\r\n            let chosenInfo = await Dados.getMovieInfo(chosen.id, 'tv');\r\n            setFeaturedData(chosenInfo);\r\n        }\r\n\r\n        loadAll()\r\n    }, []);\r\n\r\n    return(\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <Route exact path=\"/\">\r\n                        <Welcome/>\r\n                    </Route>\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './componentes/App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}