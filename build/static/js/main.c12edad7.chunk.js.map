{"version":3,"sources":["imagens/netflix-logo-150x79.png","componentes/Welcome/Welcome.js","componentes/API/Dados.js","imagens/netflix-logo-93x49.png","componentes/Browse/BrowsePage/Header/Header.js","componentes/Browse/BrowsePage/Section/Section.js","componentes/Browse/BrowsePage/BrowsePage.js","componentes/Browse/Browse.js","componentes/App/App.js","index.js"],"names":["Welcome","className","src","Netflix","alt","href","rel","target","API_KEY","basicFetch","endpoint","a","fetch","req","json","funções","getHomeList","slug","title","items","getMovieInfo","movieId","type","info","Header","props","useState","blackNav","setBlackNav","useEffect","scrollOn","window","scrollY","addEventListener","removeEventListener","navStyle","backgroundColor","description","featured","overview","length","substring","style","original_name","homepage","memo","Section","movie","map","item","key","onClick","classeX","movieList","document","getElementById","currentStyle","getComputedStyle","x","parseInt","marginLeft","Math","round","innerWidth","handleLeft","listW","results","handleRight","id","poster_path","original_title","BrowsePage","backgroundStyle","backgroundImage","backdrop_path","backgroundSize","backgroundPosition","Browse","setMovieList","featuredData","setFeaturedData","Dados","list","originals","filter","i","randomChose","floor","random","chosen","chosenInfo","loadAll","App","exact","path","ReactDOM","render"],"mappings":"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","file":"static/js/main.c12edad7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/netflix-logo-150x79.8496f04c.png\";","import React from 'react';\r\nimport Netflix from '../../imagens/netflix-logo-150x79.png';\r\nimport './Welcome.css';\r\n\r\nconst Welcome = () => {\r\n    return(\r\n        <div className=\"container-Welcome\">\r\n            <header className=\"header-Welcome\">\r\n                <nav className=\"nav-Welcome\">\r\n                    <div className=\"nav-WelcomeLogo\">\r\n                        <img src={Netflix} alt=\"Netflix\"/>\r\n                    </div>\r\n                    <div className=\"nav-WelcomeItems\">\r\n                        <ul>\r\n                            <li>\r\n                                <a href=\"/browse\" rel=\"next\">Entrar</a>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </nav>\r\n            </header>\r\n            <section className=\"section-Welcome\">\r\n                <h1>Filmes, séries e muito mais. <br/> Sem limites.</h1>\r\n            </section>\r\n            <footer className=\"footer-Welcome\">\r\n                <p>Não possuo a marca Netflix e portanto este site foi criado apenas para treinar minhas habilidades <br/> na criação de uma aplicação da web e nunca será usada para fins comerciais.</p>\r\n                <p>Veja o código-fonte no meu <a href=\"https://github.com/alessandrohenriqueramos/netflix-copy\" rel=\"noreferrer\" target=\"_blank\">GitHub</a> <i className=\"fab fa-github\"></i></p>\r\n                <p>Desenvolvido por Alessandro Henrique Ramos.</p>\r\n            </footer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Welcome;","const API_KEY = 'baf64e5536147c8cb581f1f3ca166ff1';\r\nconst API_BASE = 'https://api.themoviedb.org/3';\r\n\r\nconst basicFetch = async (endpoint) => {\r\n    const req = await fetch(`${API_BASE}${endpoint}`)\r\n    const json = await req.json();\r\n    return json\r\n}\r\n\r\nconst getHomeList = async () => {\r\n    return [\r\n        {\r\n            slug: 'originals',\r\n            title: 'Originais do Netflix',\r\n            items: await basicFetch(`/discover/tv?with_network=213&language=pt-BR&api_key=${API_KEY}`)\r\n        },\r\n        {\r\n            slug: 'trending',\r\n            title: 'Recomendados para Você',\r\n            items: await basicFetch(`/trending/all/week?language=pt-BR&api_key=${API_KEY}`)\r\n        },\r\n        {\r\n            slug: 'tolerated',\r\n            title: 'Em Alta',\r\n            items: await basicFetch(`/movie/top_rated?language=pt-BR&api_key=${API_KEY}`)\r\n        },\r\n        {\r\n            slug: 'action',\r\n            title: 'Ação',\r\n            items: await basicFetch(`/discover/movie?with_genres=28&language=pt-BR&api_key=${API_KEY}`)\r\n        },\r\n        {\r\n            slug: 'comedy',\r\n            title: 'Comédia',\r\n            items: await basicFetch(`/discover/movie?with_genres=35&language=pt-BR&api_key=${API_KEY}`)\r\n        },\r\n        {\r\n            slug: 'horror',\r\n            title: 'Terror',\r\n            items: await basicFetch(`/discover/movie?with_genres=27&language=pt-BR&api_key=${API_KEY}`)\r\n        },\r\n        {\r\n            slug: 'romance',\r\n            title: 'Romance',\r\n            items: await basicFetch(`/discover/movie?with_genres=10749&language=pt-BR&api_key=${API_KEY}`)\r\n        },\r\n        {\r\n            slug: 'documentary',\r\n            title: 'Documentário',\r\n            items: await basicFetch(`/discover/movie?with_genres=99&language=pt-BR&api_key=${API_KEY}`)\r\n        },\r\n    ]\r\n}\r\n\r\nconst getMovieInfo = async (movieId, type) => {\r\n    let info;\r\n    if (movieId) {\r\n        info = await basicFetch(`/${type}/${movieId}?language=pt-BR&api_key=${API_KEY}`)\r\n    }\r\n    return info;\r\n}\r\n\r\nconst funções = {\r\n    getHomeList,\r\n    getMovieInfo,\r\n}\r\n\r\nexport default funções;","export default __webpack_public_path__ + \"static/media/netflix-logo-93x49.13b1bf40.png\";","import React, { useState, useEffect, memo } from 'react';\r\nimport Netflix from '../../../../imagens/netflix-logo-93x49.png';\r\nimport './Header.css';\r\n\r\nconst Header = (props) => {\r\n\r\n    const [blackNav, setBlackNav] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const scrollOn = () => {\r\n            if (window.scrollY > 10) {\r\n                setBlackNav(true);\r\n            }\r\n            else {\r\n                setBlackNav(false)\r\n            }\r\n        }\r\n\r\n        window.addEventListener('scroll', scrollOn)\r\n        return () => {\r\n            window.removeEventListener('scroll', scrollOn)\r\n        }\r\n    }, []);\r\n\r\n    const navStyle = {\r\n        backgroundColor: blackNav && '#141414',\r\n    }\r\n\r\n    let description = props.featured.overview\r\n    if (description.length > 200) {\r\n        description = description.substring(0, 200) + '...';\r\n    }\r\n\r\n    return(\r\n        <div className=\"container-HeaderVertical\">\r\n            <div className=\"container-HeaderHorizontal\">\r\n                <header className=\"container-HeaderItems\">\r\n                    <nav style={navStyle} className=\"container-HeaderNav\">\r\n                        <div className=\"container-HeaderNavLogo\">\r\n                            <a href=\"/browse\">\r\n                                <img src={Netflix} alt=\"logo\"/>\r\n                            </a>\r\n                        </div>\r\n                        <div className=\"container-HeaderNavItems\">\r\n                            <ul>\r\n                                <li>\r\n\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </nav>\r\n                    <h1>{props.featured.original_name}</h1>\r\n                </header>\r\n                <section className=\"container-SectionOverview\">\r\n                    <p>{description}</p>\r\n                </section>\r\n                <section className=\"container-SectionButtons\">\r\n                    <a className=\"watch\" href={props.featured.homepage}><i className=\"fas fa-play\"></i> Assistir</a>\r\n                    <a className=\"plus\" href={props.featured.homepage}><i className=\"fas fa-info-circle\"></i> Mais informações</a>\r\n                </section>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default memo(Header);","import React from 'react';\r\nimport './Section.css';\r\n\r\nconst Section = (props) => {\r\n\r\n    const handleLeft = (classeX) => {\r\n        let movieList = document.getElementById(`movieList-${classeX}`)\r\n        let style = movieList.currentStyle || window.getComputedStyle(movieList);\r\n        let x = parseInt(style.marginLeft) + Math.round(window.innerWidth / 2);\r\n        if (x > 0) {\r\n            x = 0\r\n        }\r\n        movieList.style.marginLeft = `${x}px`\r\n    }\r\n\r\n    const handleRight = (item, classeX) => {\r\n        let movieList = document.getElementById(`movieList-${classeX}`)\r\n        let style = movieList.currentStyle || window.getComputedStyle(movieList);\r\n        let x = parseInt(style.marginLeft) - Math.round(window.innerWidth / 2);\r\n        let listW = item.results.length * 150;\r\n        if ((window.innerWidth - listW) > x) {\r\n            x = (window.innerWidth - listW) - 60\r\n        }\r\n        movieList.style.marginLeft = `${x}px`\r\n    }\r\n\r\n    const listItems = props.movie.map((item, key) =>\r\n        <div key={key} className=\"container-listItem\">\r\n            <header className=\"movieTitle\">\r\n                <h1>{item.title}</h1>\r\n            </header>\r\n            <section className=\"movieChevron\">\r\n                <div className=\"chevronLeft\">\r\n                    <i className=\"fas fa-chevron-left\" onClick={() => handleLeft(key)}></i>\r\n                </div>\r\n                <div className=\"chevronRight\">\r\n                    <i className=\"fas fa-chevron-right\" onClick={() => handleRight(item.items, key)}></i>\r\n                </div>\r\n            </section>\r\n            <section className=\"movieArea\">\r\n                <div className='movieList' id={`movieList-${key}`}>\r\n                    {item.items.results.length > 0 && item.items.results.map((item, key) =>\r\n                        <div key={key} className=\"movieItem\"> \r\n                            <img src={`https://image.tmdb.org/t/p/w200${item.poster_path}`} alt={item.original_title}/>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </section>\r\n        </div>\r\n    )\r\n    return(\r\n       listItems\r\n    )\r\n}\r\n\r\nexport default Section;","import React, { memo } from 'react';\r\nimport Header from './Header/Header';\r\nimport Section from './Section/Section';\r\nimport './BrowsePage.css';\r\n\r\nconst BrowsePage = (props) => {\r\n\r\n    const backgroundStyle = {\r\n        backgroundImage: `url(https://image.tmdb.org/t/p/original${props.featured.backdrop_path})`,\r\n        backgroundSize: 'cover',\r\n        backgroundPosition: 'center',\r\n    }\r\n\r\n    return(\r\n        <div className=\"container-BrowsePage\">\r\n            <header style={backgroundStyle} className=\"container-BrowsePageHeader\">\r\n                <Header featured={props.featured} />\r\n            </header>\r\n            <section className=\"container-BrowsePageSection\">\r\n                <Section movie={props.movie}/>\r\n            </section>\r\n            <footer className=\"container-BrowsePageFooter\">\r\n                <p>Não possuo a marca Netflix e portanto este site foi criado apenas para treinar minhas habilidades <br/> na criação de uma aplicação da web e nunca será usada para fins comerciais.</p>\r\n                <p>Veja o código-fonte no meu <a href=\"https://github.com/alessandrohenriqueramos/netflix-copy\" rel=\"noreferrer\" target=\"_blank\">GitHub</a> <i className=\"fab fa-github\"></i></p>\r\n                <p>Desenvolvido por Alessandro Henrique Ramos.</p>\r\n            </footer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default memo(BrowsePage);","import React, { useState, useEffect } from 'react';\r\nimport Dados from '../API/Dados';\r\nimport BrowsePage from './BrowsePage/BrowsePage';\r\n\r\nconst Browse = () => {\r\n\r\n    const [movieList, setMovieList] = useState([]);\r\n    const [featuredData, setFeaturedData] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const loadAll = async () => {\r\n            let list = await Dados.getHomeList();\r\n            setMovieList(list);\r\n            let originals = list.filter(i => i.slug === 'originals');\r\n            let randomChose = Math.floor(Math.random() * (originals[0].items.results.length - 1))\r\n            let chosen = originals[0].items.results[randomChose];\r\n            let chosenInfo = await Dados.getMovieInfo(chosen.id, 'tv');\r\n            setFeaturedData(chosenInfo);\r\n        }\r\n\r\n        loadAll()\r\n    }, []);\r\n\r\n    return(\r\n        <div className=\"container-Browse\">\r\n            {featuredData && <BrowsePage movie={movieList} featured={featuredData} />}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Browse;","import React from 'react';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport Welcome from '../Welcome/Welcome';\r\nimport Browse from '../Browse/Browse';\r\nimport './Normalize.css';\r\n\r\nconst App = () => {\r\n    return(\r\n        <Router>\r\n            <div className=\"container\">\r\n                <Switch>\r\n                    <Route exact path=\"/\">\r\n                        <Welcome/>\r\n                    </Route>\r\n                    <Route path=\"/browse\">\r\n                        <Browse />\r\n                    </Route>\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './componentes/App/App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}